PORT=5000
MONGO_URI=mongodb+srv://daivakosinskaite:pietus@cluster0.fl6pgxt.mongodb.net/dienos-pietus?retryWrites=true&w=majority
JWT_SECRET=Secret123





mkdir backend
cd backend
npm init -y

npm install express mongoose bcryptjs jsonwebtoken
npm install --save-dev nodemon

npx create-react-app frontend
cd frontend

npm install node-sass
npm install cors
npm install dotenv

npm install react-router-dom
npm install axios
npm install sass

set NODE_OPTIONS=--openssl-legacy-provider && npm start


Backend
express: npm install express
mongoose: npm install mongoose
dotenv: npm install dotenv
jsonwebtoken: npm install jsonwebtoken
bcryptjs: npm install bcryptjs
cors: npm install cors
nodemon: npm install --save-dev nodemon (naudojamas tik vystymo metu)
body-parser: npm install body-parser
Frontend
react: npx create-react-app frontend (jei dar nesukūrėte projekto)
axios: npm install axios
react-router-dom: npm install react-router-dom
sass: npm install sass


Backend Folder Structure
backend/
models/
User.js
Dish.js
routes/
auth.js
dishes.js
middleware/
auth.js
.env
server.js
package.json
Frontend Folder Structure
frontend/
src/
components/
AddDish.js
DishCard.js
DishList.js
Login.js
Register.js
MyAdds.js
App.js
index.js
main.scss
.env
package.json
Instaliacijų komandų santrauka
Backend
Pereikite į backend direktoriją ir vykdykite šias komandas:

sh
Kopijuoti kodą
cd backend
npm install express mongoose dotenv jsonwebtoken bcryptjs cors body-parser
npm install --save-dev nodemon
Frontend
Pereikite į frontend direktoriją ir vykdykite šias komandas:

sh
Kopijuoti kodą
cd frontend
npm install axios react-router-dom sass
Papildomi žingsniai
1. .env failas backend'e
Sukurkite .env failą backend kataloge ir pridėkite šiuos nustatymus:

plaintext
Kopijuoti kodą
PORT=5000
MONGO_URI=<your-mongo-uri>
JWT_SECRET=<your-jwt-secret>
2. package.json backend'e
Jūsų package.json failas backend'e turėtų atrodyti panašiai:

json
Kopijuoti kodą
{
  "name": "backend",
  "version": "1.0.0",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js"
  },
  "dependencies": {
    "bcryptjs": "^2.4.3",
    "body-parser": "^1.19.0",
    "cors": "^2.8.5",
    "dotenv": "^10.0.0",
    "express": "^4.17.1",
    "jsonwebtoken": "^8.5.1",
    "mongoose": "^5.13.7"
  },
  "devDependencies": {
    "nodemon": "^2.0.7"
  }
}
3. package.json frontend'e
Jūsų package.json failas frontend'e turėtų atrodyti panašiai:

json
Kopijuoti kodą
{
  "name": "frontend",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "axios": "^0.21.1",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-router-dom": "^5.2.0",
    "react-scripts": "4.0.3",
    "sass": "^1.32.8"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

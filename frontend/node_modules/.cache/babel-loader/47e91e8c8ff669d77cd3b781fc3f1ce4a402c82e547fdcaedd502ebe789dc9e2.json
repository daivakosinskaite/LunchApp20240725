{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daiva\\\\Desktop\\\\reno\\\\frontend\\\\src\\\\components\\\\MyAds.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport AdCard from './AdCard';\nimport AddAdForm from './AddAdForm';\n\n// MyAds komponentas rodo vartotojo skelbimus ir leidžia juos atnaujinti ar ištrinti\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyAds = () => {\n  _s();\n  const [ads, setAds] = useState([]);\n  const [editingAd, setEditingAd] = useState(null);\n  const [error, setError] = useState(null);\n  const token = localStorage.getItem('token');\n\n  // useCallback naudojamas apibrėžti fetchAds funkciją, kad ji nebūtų sukurta kiekvieno renderio metu\n  const fetchAds = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:5000/ads/my-ads', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch ads');\n      }\n      const data = await response.json();\n      setAds(data);\n    } catch (err) {\n      setError(err.message);\n      console.error('Failed to fetch ads:', err);\n    }\n  }, [token]);\n\n  // useEffect hook'as kviečia fetchAds funkciją tik kai token kinta\n  useEffect(() => {\n    fetchAds();\n  }, [fetchAds]);\n\n  // Funkcija skelbimui ištrinti\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/ads/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete');\n      }\n      setAds(ads.filter(ad => ad._id !== id));\n      alert('Ad deleted successfully');\n    } catch (error) {\n      setError(error.message);\n      console.error('Failed to delete ad:', error);\n      alert('Failed to delete ad');\n    }\n  };\n\n  // Funkcija skelbimui redaguoti\n  const handleUpdate = ad => {\n    setEditingAd(ad);\n  };\n\n  // Funkcija iškviečiama sėkmingai atnaujinus skelbimą\n  const handleUpdateSuccess = () => {\n    setEditingAd(null);\n    fetchAds();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ad-list-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Ads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), editingAd ? /*#__PURE__*/_jsxDEV(AddAdForm, {\n      ad: editingAd,\n      onSuccess: handleUpdateSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ad-list\",\n      children: ads.map(ad => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ad-card-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(AdCard, {\n          ad: ad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ad-card-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"update-button\",\n            onClick: () => handleUpdate(ad),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDelete(ad._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, ad._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(MyAds, \"6qZ02KqKSx3PGyUJ7QdXbb4iJL8=\");\n_c = MyAds;\nexport default MyAds;\nvar _c;\n$RefreshReg$(_c, \"MyAds\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","AdCard","AddAdForm","jsxDEV","_jsxDEV","MyAds","_s","ads","setAds","editingAd","setEditingAd","error","setError","token","localStorage","getItem","fetchAds","response","fetch","headers","ok","Error","data","json","err","message","console","handleDelete","id","method","filter","ad","_id","alert","handleUpdate","handleUpdateSuccess","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/daiva/Desktop/reno/frontend/src/components/MyAds.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport AdCard from './AdCard';\r\nimport AddAdForm from './AddAdForm';\r\n\r\n// MyAds komponentas rodo vartotojo skelbimus ir leidžia juos atnaujinti ar ištrinti\r\nconst MyAds = () => {\r\n  const [ads, setAds] = useState([]);\r\n  const [editingAd, setEditingAd] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const token = localStorage.getItem('token');\r\n\r\n  // useCallback naudojamas apibrėžti fetchAds funkciją, kad ji nebūtų sukurta kiekvieno renderio metu\r\n  const fetchAds = useCallback(async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/ads/my-ads', {\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch ads');\r\n      }\r\n      const data = await response.json();\r\n      setAds(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      console.error('Failed to fetch ads:', err);\r\n    }\r\n  }, [token]);\r\n\r\n  // useEffect hook'as kviečia fetchAds funkciją tik kai token kinta\r\n  useEffect(() => {\r\n    fetchAds();\r\n  }, [fetchAds]);\r\n\r\n  // Funkcija skelbimui ištrinti\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/ads/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to delete');\r\n      }\r\n      setAds(ads.filter(ad => ad._id !== id));\r\n      alert('Ad deleted successfully');\r\n    } catch (error) {\r\n      setError(error.message);\r\n      console.error('Failed to delete ad:', error);\r\n      alert('Failed to delete ad');\r\n    }\r\n  };\r\n\r\n  // Funkcija skelbimui redaguoti\r\n  const handleUpdate = (ad) => {\r\n    setEditingAd(ad);\r\n  };\r\n\r\n  // Funkcija iškviečiama sėkmingai atnaujinus skelbimą\r\n  const handleUpdateSuccess = () => {\r\n    setEditingAd(null);\r\n    fetchAds();\r\n  };\r\n\r\n  return (\r\n    <div className=\"ad-list-page\">\r\n      <h2>My Ads</h2>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {editingAd ? (\r\n        <AddAdForm ad={editingAd} onSuccess={handleUpdateSuccess} />\r\n      ) : (\r\n        <div className=\"ad-list\">\r\n          {ads.map(ad => (\r\n            <div key={ad._id} className=\"ad-card-wrapper\">\r\n              <AdCard ad={ad} />\r\n              <div className=\"ad-card-actions\">\r\n                <button className=\"update-button\" onClick={() => handleUpdate(ad)}>Update</button>\r\n                <button className=\"delete-button\" onClick={() => handleDelete(ad._id)}>Delete</button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyAds;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}